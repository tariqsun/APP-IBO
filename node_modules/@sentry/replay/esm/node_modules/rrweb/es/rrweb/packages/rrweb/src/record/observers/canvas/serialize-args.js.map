{"version":3,"file":"serialize-args.js","sources":["../../../../../../../../../../../../../../../node_modules/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/serialize-args.js"],"sourcesContent":["import { __spreadArray, __read } from '../../../../ext/tslib/tslib.es6.js';\nimport { encode } from '../../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\n\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    var contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nvar saveWebGLVar = function (value, win, ctx) {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    var name = value.constructor.name;\n    var list = variableListFor(ctx, name);\n    var index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map(function (arg) { return serializeArg(arg, win, ctx); });\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        var name_1 = value.constructor.name;\n        return {\n            rr_type: name_1,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        var name_2 = value.constructor.name;\n        var base64 = encode(value);\n        return {\n            rr_type: name_2,\n            base64: base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        var name_3 = value.constructor.name;\n        return {\n            rr_type: name_3,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        var name_4 = value.constructor.name;\n        var src = value.src;\n        return {\n            rr_type: name_4,\n            src: src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        var name_5 = value.constructor.name;\n        return {\n            rr_type: name_5,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        var name_6 = value.constructor.name;\n        var index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name_6,\n            index: index,\n        };\n    }\n    return value;\n}\nvar serializeArgs = function (args, win, ctx) {\n    return __spreadArray([], __read(args), false).map(function (arg) { return serializeArg(arg, win, ctx); });\n};\nvar isInstanceOfWebGLObject = function (value, win) {\n    var webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    var supportedWebGLConstructorNames = webGLConstructorNames.filter(function (name) { return typeof win[name] === 'function'; });\n    return Boolean(supportedWebGLConstructorNames.find(function (name) { return value instanceof win[name]; }));\n};\n\nexport { isInstanceOfWebGLObject, saveWebGLVar, serializeArg, serializeArgs, variableListFor };\n"],"names":[],"mappings":"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"}