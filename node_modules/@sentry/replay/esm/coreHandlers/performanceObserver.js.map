{"version":3,"file":"performanceObserver.js","sources":["../../../../src/coreHandlers/performanceObserver.ts"],"sourcesContent":["import type { AllPerformanceEntry, ReplayContainer } from '../types';\nimport { dedupePerformanceEntries } from '../util/dedupePerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): PerformanceObserver {\n  const performanceObserverHandler = (list: PerformanceObserverEntryList): void => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(\n      replay.performanceEvents,\n      list.getEntries() as AllPerformanceEntry[],\n    );\n    replay.performanceEvents = newPerformanceEntries;\n  };\n\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n\n  [\n    'element',\n    'event',\n    'first-input',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'navigation',\n    'paint',\n    'resource',\n  ].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true,\n      });\n    } catch {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n\n  return performanceObserver;\n}\n"],"names":[],"mappings":";;AAGA;AACA;AACA;AACA,SAAA,wBAAA,CAAA,MAAA,EAAA;AACA,EAAA,MAAA,0BAAA,GAAA,CAAA,IAAA,KAAA;AACA;AACA;AACA,IAAA,MAAA,qBAAA,GAAA,wBAAA;AACA,MAAA,MAAA,CAAA,iBAAA;AACA,MAAA,IAAA,CAAA,UAAA,EAAA;AACA,KAAA,CAAA;AACA,IAAA,MAAA,CAAA,iBAAA,GAAA,qBAAA,CAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,MAAA,mBAAA,GAAA,IAAA,mBAAA,CAAA,0BAAA,CAAA,CAAA;AACA;AACA,EAAA;AACA,IAAA,SAAA;AACA,IAAA,OAAA;AACA,IAAA,aAAA;AACA,IAAA,0BAAA;AACA,IAAA,cAAA;AACA,IAAA,UAAA;AACA,IAAA,YAAA;AACA,IAAA,OAAA;AACA,IAAA,UAAA;AACA,GAAA,CAAA,OAAA,CAAA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,MAAA,mBAAA,CAAA,OAAA,CAAA;AACA,QAAA,IAAA;AACA,QAAA,QAAA,EAAA,IAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA,CAAA,OAAA,CAAA,EAAA;AACA;AACA;AACA,KAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,OAAA,mBAAA,CAAA;AACA;;;;"}