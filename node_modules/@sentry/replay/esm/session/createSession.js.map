{"version":3,"file":"createSession.js","sources":["../../../../src/session/createSession.ts"],"sourcesContent":["import { logger } from '@sentry/utils';\n\nimport type { Session, SessionOptions } from '../types';\nimport { saveSession } from './saveSession';\nimport { getSessionSampleType, makeSession } from './Session';\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession({ sessionSampleRate, errorSampleRate, stickySession = false }: SessionOptions): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, errorSampleRate);\n  const session = makeSession({\n    sampled,\n  });\n\n  __DEBUG_BUILD__ && logger.log(`[Replay] Creating new session: ${session.id}`);\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n"],"names":[],"mappings":";;;;AAMA;AACA;AACA;AACA;AACA;AACA,SAAA,aAAA,CAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,aAAA,GAAA,KAAA,EAAA,EAAA;AACA,EAAA,MAAA,OAAA,GAAA,oBAAA,CAAA,iBAAA,EAAA,eAAA,CAAA,CAAA;AACA,EAAA,MAAA,OAAA,GAAA,WAAA,CAAA;AACA,IAAA,OAAA;AACA,GAAA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,OAAA,gBAAA,KAAA,WAAA,IAAA,gBAAA,KAAA,MAAA,CAAA,GAAA,CAAA,CAAA,+BAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA,aAAA,EAAA;AACA,IAAA,WAAA,CAAA,OAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,OAAA,CAAA;AACA;;;;"}