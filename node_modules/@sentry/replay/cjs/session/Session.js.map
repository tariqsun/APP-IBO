{"version":3,"file":"Session.js","sources":["../../../../src/session/Session.ts"],"sourcesContent":["import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\nimport { isSampled } from '../util/isSampled';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = new Date().getTime();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, errorSampleRate: number): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : isSampled(errorSampleRate) ? 'error' : false;\n}\n"],"names":["uuid4","isSampled"],"mappings":";;;;;AAKA;AACA;AACA;AACA,SAAA,WAAA,CAAA,OAAA,EAAA;AACA,EAAA,MAAA,GAAA,GAAA,IAAA,IAAA,EAAA,CAAA,OAAA,EAAA,CAAA;AACA,EAAA,MAAA,EAAA,GAAA,OAAA,CAAA,EAAA,IAAAA,WAAA,EAAA,CAAA;AACA;AACA,EAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,IAAA,GAAA,CAAA;AACA,EAAA,MAAA,YAAA,GAAA,OAAA,CAAA,YAAA,IAAA,GAAA,CAAA;AACA,EAAA,MAAA,SAAA,GAAA,OAAA,CAAA,SAAA,IAAA,CAAA,CAAA;AACA,EAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA;AACA,EAAA,OAAA;AACA,IAAA,EAAA;AACA,IAAA,OAAA;AACA,IAAA,YAAA;AACA,IAAA,SAAA;AACA,IAAA,OAAA;AACA,GAAA,CAAA;AACA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,oBAAA,CAAA,iBAAA,EAAA,eAAA,EAAA;AACA,EAAA,OAAAC,mBAAA,CAAA,iBAAA,CAAA,GAAA,SAAA,GAAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,OAAA,GAAA,KAAA,CAAA;AACA;;;;;"}