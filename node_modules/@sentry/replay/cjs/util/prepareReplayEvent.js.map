{"version":3,"file":"prepareReplayEvent.js","sources":["../../../../src/util/prepareReplayEvent.ts"],"sourcesContent":["import { prepareEvent, Scope } from '@sentry/core';\nimport { Client, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client;\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const preparedEvent = (await prepareEvent(client.getOptions(), event, { event_id }, scope)) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const name = (metadata && metadata.sdk && metadata.sdk.name) || 'sentry.javascript.unknown';\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    version: __SENTRY_REPLAY_VERSION__,\n    name,\n  };\n\n  return preparedEvent;\n}\n"],"names":["prepareEvent"],"mappings":";;;;AAGA;AACA;AACA;AACA,eAAA,kBAAA,CAAA;AACA,EAAA,MAAA;AACA,EAAA,KAAA;AACA,EAAA,QAAA,EAAA,QAAA;AACA,EAAA,KAAA;AACA,CAAA;;AAKA,EAAA;AACA,EAAA,MAAA,aAAA,IAAA,MAAAA,iBAAA,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AACA;AACA;AACA,EAAA,IAAA,CAAA,aAAA,EAAA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA;AACA;AACA;AACA;AACA;AACA,EAAA,aAAA,CAAA,QAAA,GAAA,aAAA,CAAA,QAAA,IAAA,YAAA,CAAA;AACA;AACA;AACA,EAAA,MAAA,QAAA,GAAA,MAAA,CAAA,cAAA,IAAA,MAAA,CAAA,cAAA,EAAA,CAAA;AACA,EAAA,MAAA,IAAA,GAAA,CAAA,QAAA,IAAA,QAAA,CAAA,GAAA,IAAA,QAAA,CAAA,GAAA,CAAA,IAAA,KAAA,2BAAA,CAAA;AACA;AACA,EAAA,aAAA,CAAA,GAAA,GAAA;AACA,IAAA,GAAA,aAAA,CAAA,GAAA;AACA,IAAA,OAAA,EAAA,QAAA;AACA,IAAA,IAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,OAAA,aAAA,CAAA;AACA;;;;"}