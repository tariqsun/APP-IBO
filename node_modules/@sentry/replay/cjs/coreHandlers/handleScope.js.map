{"version":3,"file":"handleScope.js","sources":["../../../../src/coreHandlers/handleScope.ts"],"sourcesContent":["import { Breadcrumb, Scope } from '@sentry/types';\n\nimport { createBreadcrumb } from '../util/createBreadcrumb';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  const newBreadcrumb = scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    newBreadcrumb.category &&\n    (['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n      newBreadcrumb.category.startsWith('ui.'))\n  ) {\n    return null;\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n"],"names":["createBreadcrumb"],"mappings":";;;;AAIA,IAAA,gBAAA,GAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,WAAA,CAAA,KAAA,EAAA;AACA,EAAA,MAAA,aAAA,GAAA,KAAA,CAAA,iBAAA,EAAA,CAAA;AACA;AACA;AACA;AACA,EAAA,IAAA,gBAAA,KAAA,aAAA,IAAA,CAAA,aAAA,EAAA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,gBAAA,GAAA,aAAA,CAAA;AACA;AACA,EAAA;AACA,IAAA,aAAA,CAAA,QAAA;AACA,KAAA,CAAA,OAAA,EAAA,KAAA,EAAA,cAAA,EAAA,oBAAA,CAAA,CAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,MAAA,aAAA,CAAA,QAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA;AACA,IAAA;AACA,IAAA,OAAA,IAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAAA,iCAAA,CAAA,aAAA,CAAA,CAAA;AACA;;;;"}