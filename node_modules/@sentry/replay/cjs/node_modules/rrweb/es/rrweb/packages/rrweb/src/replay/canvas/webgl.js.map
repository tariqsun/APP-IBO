{"version":3,"file":"webgl.js","sources":["../../../../../../../../../../../../../../node_modules/rrweb/es/rrweb/packages/rrweb/src/replay/canvas/webgl.js"],"sourcesContent":["import { __spreadArray, __read } from '../../../ext/tslib/tslib.es6.js';\nimport { decode } from '../../../../../ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js';\nimport { CanvasContext } from '../../types.js';\n\nvar webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    var contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nfunction getContext(target, type) {\n    try {\n        if (type === CanvasContext.WebGL) {\n            return (target.getContext('webgl') || target.getContext('experimental-webgl'));\n        }\n        return target.getContext('webgl2');\n    }\n    catch (e) {\n        return null;\n    }\n}\nvar WebGLVariableConstructorsNames = [\n    'WebGLActiveInfo',\n    'WebGLBuffer',\n    'WebGLFramebuffer',\n    'WebGLProgram',\n    'WebGLRenderbuffer',\n    'WebGLShader',\n    'WebGLShaderPrecisionFormat',\n    'WebGLTexture',\n    'WebGLUniformLocation',\n    'WebGLVertexArrayObject',\n];\nfunction saveToWebGLVarMap(ctx, result) {\n    if (!(result === null || result === void 0 ? void 0 : result.constructor))\n        return;\n    var name = result.constructor.name;\n    if (!WebGLVariableConstructorsNames.includes(name))\n        return;\n    var variables = variableListFor(ctx, name);\n    if (!variables.includes(result))\n        variables.push(result);\n}\nfunction deserializeArg(imageMap, ctx) {\n    return function (arg) {\n        if (arg && typeof arg === 'object' && 'rr_type' in arg) {\n            if ('index' in arg) {\n                var name_1 = arg.rr_type, index = arg.index;\n                return variableListFor(ctx, name_1)[index];\n            }\n            else if ('args' in arg) {\n                var name_2 = arg.rr_type, args = arg.args;\n                var ctor = window[name_2];\n                return new (ctor.bind.apply(ctor, __spreadArray([void 0], __read(args.map(deserializeArg(imageMap, ctx))), false)))();\n            }\n            else if ('base64' in arg) {\n                return decode(arg.base64);\n            }\n            else if ('src' in arg) {\n                var image = imageMap.get(arg.src);\n                if (image) {\n                    return image;\n                }\n                else {\n                    var image_1 = new Image();\n                    image_1.src = arg.src;\n                    imageMap.set(arg.src, image_1);\n                    return image_1;\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            return arg.map(deserializeArg(imageMap, ctx));\n        }\n        return arg;\n    };\n}\nfunction webglMutation(_a) {\n    var mutation = _a.mutation, target = _a.target, type = _a.type, imageMap = _a.imageMap, errorHandler = _a.errorHandler;\n    try {\n        var ctx = getContext(target, type);\n        if (!ctx)\n            return;\n        if (mutation.setter) {\n            ctx[mutation.property] = mutation.args[0];\n            return;\n        }\n        var original = ctx[mutation.property];\n        var args = mutation.args.map(deserializeArg(imageMap, ctx));\n        var result = original.apply(ctx, args);\n        saveToWebGLVarMap(ctx, result);\n        var debugMode = false;\n        if (debugMode) {\n            if (mutation.property === 'compileShader') {\n                if (!ctx.getShaderParameter(args[0], ctx.COMPILE_STATUS))\n                    console.warn('something went wrong in replay', ctx.getShaderInfoLog(args[0]));\n            }\n            else if (mutation.property === 'linkProgram') {\n                ctx.validateProgram(args[0]);\n                if (!ctx.getProgramParameter(args[0], ctx.LINK_STATUS))\n                    console.warn('something went wrong in replay', ctx.getProgramInfoLog(args[0]));\n            }\n            var webglError = ctx.getError();\n            if (webglError !== ctx.NO_ERROR) {\n                console.warn.apply(console, __spreadArray(['WEBGL ERROR',\n                    webglError,\n                    'on command:',\n                    mutation.property], __read(args), false));\n            }\n        }\n    }\n    catch (error) {\n        errorHandler(mutation, error);\n    }\n}\n\nexport default webglMutation;\nexport { deserializeArg, variableListFor };\n"],"names":["CanvasContext","__spreadArray","__read","decode"],"mappings":"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"}