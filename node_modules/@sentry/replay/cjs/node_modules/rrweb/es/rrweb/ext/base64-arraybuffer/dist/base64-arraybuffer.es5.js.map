{"version":3,"file":"base64-arraybuffer.es5.js","sources":["../../../../../../../../../../../../node_modules/rrweb/es/rrweb/ext/base64-arraybuffer/dist/base64-arraybuffer.es5.js"],"sourcesContent":["/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n"],"names":[],"mappings":"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"}