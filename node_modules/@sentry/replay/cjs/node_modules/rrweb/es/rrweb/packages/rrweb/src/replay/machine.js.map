{"version":3,"file":"machine.js","sources":["../../../../../../../../../../../../../node_modules/rrweb/es/rrweb/packages/rrweb/src/replay/machine.js"],"sourcesContent":["import { __assign, __values } from '../../ext/tslib/tslib.es6.js';\nimport { interpret as v, createMachine as s, assign as o } from '../../../../ext/@xstate/fsm/es/index.js';\nimport { EventType, IncrementalSource, ReplayerEvents } from '../types.js';\nimport { addDelay } from './timer.js';\n\nfunction discardPriorSnapshots(events, baselineTime) {\n    for (var idx = events.length - 1; idx >= 0; idx--) {\n        var event_1 = events[idx];\n        if (event_1.type === EventType.Meta) {\n            if (event_1.timestamp <= baselineTime) {\n                return events.slice(idx);\n            }\n        }\n    }\n    return events;\n}\nfunction createPlayerService(context, _a) {\n    var getCastFn = _a.getCastFn, applyEventsSynchronously = _a.applyEventsSynchronously, emitter = _a.emitter;\n    var playerMachine = s({\n        id: 'player',\n        context: context,\n        initial: 'paused',\n        states: {\n            playing: {\n                on: {\n                    PAUSE: {\n                        target: 'paused',\n                        actions: ['pause'],\n                    },\n                    CAST_EVENT: {\n                        target: 'playing',\n                        actions: 'castEvent',\n                    },\n                    END: {\n                        target: 'paused',\n                        actions: ['resetLastPlayedEvent', 'pause'],\n                    },\n                    ADD_EVENT: {\n                        target: 'playing',\n                        actions: ['addEvent'],\n                    },\n                },\n            },\n            paused: {\n                on: {\n                    PLAY: {\n                        target: 'playing',\n                        actions: ['recordTimeOffset', 'play'],\n                    },\n                    CAST_EVENT: {\n                        target: 'paused',\n                        actions: 'castEvent',\n                    },\n                    TO_LIVE: {\n                        target: 'live',\n                        actions: ['startLive'],\n                    },\n                    ADD_EVENT: {\n                        target: 'paused',\n                        actions: ['addEvent'],\n                    },\n                },\n            },\n            live: {\n                on: {\n                    ADD_EVENT: {\n                        target: 'live',\n                        actions: ['addEvent'],\n                    },\n                    CAST_EVENT: {\n                        target: 'live',\n                        actions: ['castEvent'],\n                    },\n                },\n            },\n        },\n    }, {\n        actions: {\n            castEvent: o({\n                lastPlayedEvent: function (ctx, event) {\n                    if (event.type === 'CAST_EVENT') {\n                        return event.payload.event;\n                    }\n                    return ctx.lastPlayedEvent;\n                },\n            }),\n            recordTimeOffset: o(function (ctx, event) {\n                var timeOffset = ctx.timeOffset;\n                if ('payload' in event && 'timeOffset' in event.payload) {\n                    timeOffset = event.payload.timeOffset;\n                }\n                return __assign(__assign({}, ctx), { timeOffset: timeOffset, baselineTime: ctx.events[0].timestamp + timeOffset });\n            }),\n            play: function (ctx) {\n                var e_1, _a, e_2, _b;\n                var _c;\n                var timer = ctx.timer, events = ctx.events, baselineTime = ctx.baselineTime, lastPlayedEvent = ctx.lastPlayedEvent;\n                timer.clear();\n                try {\n                    for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n                        var event_2 = events_1_1.value;\n                        addDelay(event_2, baselineTime);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                var neededEvents = discardPriorSnapshots(events, baselineTime);\n                var lastPlayedTimestamp = lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.timestamp;\n                if ((lastPlayedEvent === null || lastPlayedEvent === void 0 ? void 0 : lastPlayedEvent.type) === EventType.IncrementalSnapshot &&\n                    lastPlayedEvent.data.source === IncrementalSource.MouseMove) {\n                    lastPlayedTimestamp =\n                        lastPlayedEvent.timestamp +\n                            ((_c = lastPlayedEvent.data.positions[0]) === null || _c === void 0 ? void 0 : _c.timeOffset);\n                }\n                if (baselineTime < (lastPlayedTimestamp || 0)) {\n                    emitter.emit(ReplayerEvents.PlayBack);\n                }\n                var syncEvents = new Array();\n                var actions = new Array();\n                var _loop_1 = function (event_3) {\n                    if (lastPlayedTimestamp &&\n                        lastPlayedTimestamp < baselineTime &&\n                        (event_3.timestamp <= lastPlayedTimestamp ||\n                            event_3 === lastPlayedEvent)) {\n                        return \"continue\";\n                    }\n                    if (event_3.timestamp < baselineTime) {\n                        syncEvents.push(event_3);\n                    }\n                    else {\n                        var castFn_1 = getCastFn(event_3, false);\n                        actions.push({\n                            doAction: function () {\n                                castFn_1();\n                            },\n                            delay: event_3.delay,\n                        });\n                    }\n                };\n                try {\n                    for (var neededEvents_1 = __values(neededEvents), neededEvents_1_1 = neededEvents_1.next(); !neededEvents_1_1.done; neededEvents_1_1 = neededEvents_1.next()) {\n                        var event_3 = neededEvents_1_1.value;\n                        _loop_1(event_3);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (neededEvents_1_1 && !neededEvents_1_1.done && (_b = neededEvents_1.return)) _b.call(neededEvents_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                applyEventsSynchronously(syncEvents);\n                emitter.emit(ReplayerEvents.Flush);\n                timer.addActions(actions);\n                timer.start();\n            },\n            pause: function (ctx) {\n                ctx.timer.clear();\n            },\n            resetLastPlayedEvent: o(function (ctx) {\n                return __assign(__assign({}, ctx), { lastPlayedEvent: null });\n            }),\n            startLive: o({\n                baselineTime: function (ctx, event) {\n                    ctx.timer.toggleLiveMode(true);\n                    ctx.timer.start();\n                    if (event.type === 'TO_LIVE' && event.payload.baselineTime) {\n                        return event.payload.baselineTime;\n                    }\n                    return Date.now();\n                },\n            }),\n            addEvent: o(function (ctx, machineEvent) {\n                var baselineTime = ctx.baselineTime, timer = ctx.timer, events = ctx.events;\n                if (machineEvent.type === 'ADD_EVENT') {\n                    var event_4 = machineEvent.payload.event;\n                    addDelay(event_4, baselineTime);\n                    var end = events.length - 1;\n                    if (!events[end] || events[end].timestamp <= event_4.timestamp) {\n                        events.push(event_4);\n                    }\n                    else {\n                        var insertionIndex = -1;\n                        var start = 0;\n                        while (start <= end) {\n                            var mid = Math.floor((start + end) / 2);\n                            if (events[mid].timestamp <= event_4.timestamp) {\n                                start = mid + 1;\n                            }\n                            else {\n                                end = mid - 1;\n                            }\n                        }\n                        if (insertionIndex === -1) {\n                            insertionIndex = start;\n                        }\n                        events.splice(insertionIndex, 0, event_4);\n                    }\n                    var isSync = event_4.timestamp < baselineTime;\n                    var castFn_2 = getCastFn(event_4, isSync);\n                    if (isSync) {\n                        castFn_2();\n                    }\n                    else if (timer.isActive()) {\n                        timer.addAction({\n                            doAction: function () {\n                                castFn_2();\n                            },\n                            delay: event_4.delay,\n                        });\n                    }\n                }\n                return __assign(__assign({}, ctx), { events: events });\n            }),\n        },\n    });\n    return v(playerMachine);\n}\nfunction createSpeedService(context) {\n    var speedMachine = s({\n        id: 'speed',\n        context: context,\n        initial: 'normal',\n        states: {\n            normal: {\n                on: {\n                    FAST_FORWARD: {\n                        target: 'skipping',\n                        actions: ['recordSpeed', 'setSpeed'],\n                    },\n                    SET_SPEED: {\n                        target: 'normal',\n                        actions: ['setSpeed'],\n                    },\n                },\n            },\n            skipping: {\n                on: {\n                    BACK_TO_NORMAL: {\n                        target: 'normal',\n                        actions: ['restoreSpeed'],\n                    },\n                    SET_SPEED: {\n                        target: 'normal',\n                        actions: ['setSpeed'],\n                    },\n                },\n            },\n        },\n    }, {\n        actions: {\n            setSpeed: function (ctx, event) {\n                if ('payload' in event) {\n                    ctx.timer.setSpeed(event.payload.speed);\n                }\n            },\n            recordSpeed: o({\n                normalSpeed: function (ctx) { return ctx.timer.speed; },\n            }),\n            restoreSpeed: function (ctx) {\n                ctx.timer.setSpeed(ctx.normalSpeed);\n            },\n        },\n    });\n    return v(speedMachine);\n}\n\nexport { createPlayerService, createSpeedService, discardPriorSnapshots };\n"],"names":["EventType","s","o","__assign","timer","__values","addDelay","IncrementalSource","ReplayerEvents","v"],"mappings":"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"}