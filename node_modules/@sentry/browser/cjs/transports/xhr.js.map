{"version":3,"file":"xhr.js","sources":["../../../../src/transports/xhr.ts"],"sourcesContent":["import { createTransport } from '@sentry/core';\nimport { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\nimport { BrowserTransportOptions } from './types';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nexport function makeXHRTransport(options: BrowserTransportOptions): Transport {\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = (): void => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n"],"names":["SyncPromise","createTransport"],"mappings":";;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,mBAAA,GAAA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA,SAAA,gBAAA,CAAA,OAAA,EAAA;AACA,EAAA,SAAA,WAAA,CAAA,OAAA,EAAA;AACA,IAAA,OAAA,IAAAA,iBAAA,CAAA,CAAA,OAAA,EAAA,MAAA,KAAA;AACA,MAAA,MAAA,GAAA,GAAA,IAAA,cAAA,EAAA,CAAA;AACA;AACA,MAAA,GAAA,CAAA,OAAA,GAAA,MAAA,CAAA;AACA;AACA,MAAA,GAAA,CAAA,kBAAA,GAAA,MAAA;AACA,QAAA,IAAA,GAAA,CAAA,UAAA,KAAA,mBAAA,EAAA;AACA,UAAA,OAAA,CAAA;AACA,YAAA,UAAA,EAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,EAAA;AACA,cAAA,sBAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,sBAAA,CAAA;AACA,cAAA,aAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,aAAA,CAAA;AACA,aAAA;AACA,WAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA,CAAA;AACA;AACA,MAAA,GAAA,CAAA,IAAA,CAAA,MAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,MAAA,KAAA,MAAA,MAAA,IAAA,OAAA,CAAA,OAAA,EAAA;AACA,QAAA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA,MAAA,CAAA,EAAA;AACA,UAAA,GAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA,SAAA;AACA,OAAA;AACA;AACA,MAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAAC,oBAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;AACA;;;;"}