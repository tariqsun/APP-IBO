{"version":3,"file":"globalhandlers.js","sources":["../../../../src/integrations/globalhandlers.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Hub, Integration, Primitive, StackParser } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\n/** JSDoc */\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n  private _installFunc: Record<GlobalHandlersIntegrationsOptionKeys, (() => void) | undefined> = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key as GlobalHandlersIntegrationsOptionKeys];\n      if (installFunc && options[key as GlobalHandlersIntegrationsOptionKeys]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key as GlobalHandlersIntegrationsOptionKeys] = undefined;\n      }\n    }\n  }\n}\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler(): void {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler(): void {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e: any) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  __DEBUG_BUILD__ && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub: Hub, error: EventHint['originalException'], event: Event, type: string): void {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions(): [Hub, StackParser, boolean | undefined] {\n  const hub = getCurrentHub();\n  const client = hub.getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n"],"names":[],"mappings":"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"}